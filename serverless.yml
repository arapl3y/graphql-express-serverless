service: serverless-graphql

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  stage: "${opt:stage, self:provider.stage}"
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      lists:
        sources:
          - table: alex-list
            sources: [./lists.json]
      items:
        sources:
          - table: alex-items
            sources: [./items.json]
  serverless-offline:
    host: 0.0.0.0

provider:
  name: aws
  environment: ${file(.env.yml):${self:custom.stage}}
  runtime: nodejs8.10
  region: ap-southeast-2
  profile: personal
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:ap-southeast-2:*:*

functions:
  graphql:
    handler: index.handler
    events:
      - http:
          path: graphql
          method: post
          cors: true
  playground:
    handler: index.handler
    events:
      - http:
          path: playground
          method: get

resources:
  Resources:
    listTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: alex-list
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    itemsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: alex-items
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
